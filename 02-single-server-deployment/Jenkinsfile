pipeline {
    agent any

    environment {
        SERVER_IP = credentials('app-server-ip')
    }
    stages {

        // stage('Create virtualenv') {
        //     steps {
        //         sh "python3 -m venv venv"
        //         sh ". ./venv/bin/activate" 
        //     }
        // }

        stage('Setup and Test') {
            agent {
                docker {
                    image 'python:3.10-alpine'
                }
            }
            steps {
                sh '''
                python3 -m venv venv
                . venv/bin/activate
                pip install -r ./02-single-server-deployment/requirements.txt
                pytest
                ''' 
            }
        } 
        
        // stage('Test') {
        //     steps {    
        //         sh "pytest"  
        //     }
        // }

        stage('Package code') {      
            steps {   
                sh "zip -r myapp.zip ./* -x '*.git*'"
                sh "ls -lart"
            }
        }

        stage('Deploy to App Server') {
            steps {
                script {
                    sshagent(['app-server-private-key']) {
                        sh """
                            ssh -o StrictHostKeyChecking=no ubuntu@${SERVER_IP} "
                                sudo systemctl stop flaskapp.service
                                rm -rf /home/ubuntu/app/*

                                unzip -o /home/ubuntu/myapp.zip -d /home/ubuntu/app/
                                source app/venv/bin/activate
                                cd /home/ubuntu/app/
                                pip install -r requirements.txt
                                sudo systemctl start flaskapp.service
                            "
                        """
                    }
                }
            } 
        }
        
    }
}